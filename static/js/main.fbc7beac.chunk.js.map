{"version":3,"sources":["services/SearchService.js","components/Card.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["SearchService","getData","url","a","fetch","request","ok","Error","status","json","getCity","PROXY","CITY_API","res","filter","item","name","getPrice","date","PRICE","this","API_KEY","Card","props","state","getNameCityFrom","getNameCityTo","getDate","currencyEx","getChanges","getLinkAviasales","prevProps","data","number_of_changes","setState","transfer","Date","depart_date","toLocaleString","year","month","day","link","origin","getMonth","destination","objCity","city","find","code","cityNameFrom","cityNameTo","exch","value","toFixed","className","gate","href","Component","Search","onCityLoaded","showCity","input","list","textContent","toLowerCase","startsWith","forEach","li","document","createElement","classList","add","append","selectCityFrom","event","dropdownCitiesFrom","querySelector","target","tagName","selectCityTo","dropdownCitiesTo","onOriginChange","onDestinationChange","departureDateChange","setDepartureDate","renderCheap","card","best_prices","cheapTicket","cheapestTicket","getElementById","h2","style","display","undefined","renderCardCheap","onSearchFlights","preventDefault","formData","from","to","when","requestData","then","response","alert","updateCity","onSubmit","type","onInput","bind","onChange","required","onClick","placeholder","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fbc7beac.chunk.js","sourcesContent":["/** @format */\r\n\r\nexport default class SearchService {\r\n  constructor() {\r\n    this.CITY_API = 'http://api.travelpayouts.com/data/ru/cities.json';\r\n    this.PROXY = 'https://cors-anywhere.herokuapp.com/';\r\n    this.API_KEY = '6af464c149023c58b81e81ab93488992';\r\n    this.PRICE = 'https://min-prices.aviasales.ru/calendar_preload';\r\n  }\r\n  getData = async (url) => {\r\n    const request = await fetch(url);\r\n\r\n    if (!request.ok) {\r\n      throw new Error(`Could not fetch ${url}; received ${request.status}`);\r\n    }\r\n\r\n    return await request.json();\r\n  };\r\n\r\n  getCity = async () => {\r\n    const res = await this.getData(this.PROXY + this.CITY_API);\r\n    return res.filter((item) => item.name);\r\n  };\r\n\r\n  getPrice = async (date) => {\r\n    const res = await this.getData(this.PROXY + this.PRICE + date);\r\n    return res;\r\n  };\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nexport default class Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNameCityFrom();\r\n    this.getNameCityTo();\r\n    this.getDate();\r\n    this.currencyEx();\r\n    this.getChanges();\r\n    this.getLinkAviasales();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.getNameCityFrom();\r\n      this.getNameCityTo();\r\n      this.getDate();\r\n      this.currencyEx();\r\n      this.getChanges();\r\n      this.getLinkAviasales();\r\n    }\r\n  }\r\n\r\n  getChanges() {\r\n    const num = this.props.data.number_of_changes;\r\n    switch (num) {\r\n      case 1:\r\n        this.setState({ transfer: 'С одной пересадкой' });\r\n        break;\r\n      case 2:\r\n        this.setState({ transfer: 'С двумя пересадками' });\r\n        break;\r\n      case 3:\r\n        this.setState({ transfer: 'С тремя пересадками' });\r\n        break;\r\n      default:\r\n        this.setState({ transfer: 'Без пересадок' });\r\n    }\r\n  }\r\n\r\n  getDate() {\r\n    const date = new Date(this.props.data.depart_date).toLocaleString('ru', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n    this.setState({ date });\r\n  }\r\n\r\n  getLinkAviasales() {\r\n    let link = 'https://www.aviasales.ua/search/';\r\n    link += this.props.data.origin;\r\n    const date = new Date(this.props.data.depart_date);\r\n    const day = date.getDate();\r\n    link += day < 10 ? '0' + day : day;\r\n    const month = date.getMonth();\r\n    link += month < 10 ? '0' + month : month;\r\n    link += this.props.data.destination;\r\n    link += '1';\r\n    this.setState({ link });\r\n  }\r\n\r\n  getNameCityFrom() {\r\n    const objCity = this.props.city.find(\r\n      (item) => item.code === this.props.data.origin,\r\n    );\r\n    this.setState({ cityNameFrom: objCity.name });\r\n  }\r\n  getNameCityTo() {\r\n    const objCity = this.props.city.find(\r\n      (item) => item.code === this.props.data.destination,\r\n    );\r\n    this.setState({ cityNameTo: objCity.name });\r\n  }\r\n  currencyEx() {\r\n    const exch = (this.props.data.value / 2.6).toFixed(2);\r\n    this.setState({ exch });\r\n  }\r\n  render() {\r\n    const { link, exch, cityNameFrom, cityNameTo, date, transfer } = this.state;\r\n    return (\r\n      <div className=\"card_ticket\">\r\n        <h3 className=\"agent\">{this.props.data.gate}</h3>\r\n        <div className=\"ticket__wrapper\">\r\n          <div className=\"left-side\">\r\n            <a href={link} className=\"button button__buy\">\r\n              Купить за {exch}₴\r\n            </a>\r\n          </div>\r\n          <div className=\"right-side\">\r\n            <div className=\"block-left\">\r\n              <div className=\"city__from\">\r\n                Вылет из города:\r\n                <span className=\"city__name\">{cityNameFrom}</span>\r\n              </div>\r\n              <div className=\"date\">{date}</div>\r\n            </div>\r\n\r\n            <div className=\"block-right\">\r\n              <div className=\"changes\">{transfer}</div>\r\n              <div className=\"city__to\">\r\n                Город назначения:\r\n                <span className=\"city__name\">{cityNameTo}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './search.css';\r\nimport SearchService from '../services/SearchService';\r\nimport Card from './Card';\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.SearchService = new SearchService();\r\n\r\n    this.state = {\r\n      origin: '',\r\n      destination: '',\r\n      setDepartureDate: '',\r\n      city: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateCity();\r\n  }\r\n\r\n  updateCity() {\r\n    this.SearchService.getCity().then(this.onCityLoaded);\r\n  }\r\n\r\n  onCityLoaded = (city) => {\r\n    this.setState({\r\n      city,\r\n    });\r\n  };\r\n\r\n  showCity = (input, list) => {\r\n    list.textContent = '';\r\n    if (input !== '') {\r\n      const filterCity = this.state.city.filter((item) => {\r\n        const fixItem = item.name.toLowerCase();\r\n        return fixItem.startsWith(input.toLowerCase());\r\n      });\r\n\r\n      filterCity.forEach((item) => {\r\n        const li = document.createElement('li');\r\n        li.classList.add('dropdown__city');\r\n        li.textContent = item.name;\r\n        list.append(li);\r\n      });\r\n    }\r\n  };\r\n\r\n  selectCityFrom = (event) => {\r\n    const dropdownCitiesFrom = document.querySelector('.dropdown__cities-from');\r\n    const target = event.target;\r\n    if (target.tagName.toLowerCase() === 'li') {\r\n      this.setState({ origin: target.textContent });\r\n      dropdownCitiesFrom.textContent = '';\r\n    }\r\n  };\r\n\r\n  selectCityTo = (event) => {\r\n    const dropdownCitiesTo = document.querySelector('.dropdown__cities-to');\r\n    const target = event.target;\r\n    if (target.tagName.toLowerCase() === 'li') {\r\n      this.setState({ destination: target.textContent });\r\n      dropdownCitiesTo.textContent = '';\r\n    }\r\n  };\r\n\r\n  onOriginChange = (event) => {\r\n    this.setState({\r\n      origin: event.target.value,\r\n    });\r\n  };\r\n\r\n  onDestinationChange = (event) => {\r\n    this.setState({\r\n      destination: event.target.value,\r\n    });\r\n  };\r\n\r\n  departureDateChange = (event) => {\r\n    this.setState({\r\n      setDepartureDate: event.target.value,\r\n    });\r\n  };\r\n\r\n  renderCheap = (data, date) => {\r\n    const cheapTicketYear = data.best_prices;\r\n    const cheapTicketDay = cheapTicketYear.filter(\r\n      (item) => item.depart_date === date,\r\n    );\r\n    const card = cheapTicketDay[0];\r\n    this.setState({ cheapTicket: card });\r\n    const cheapestTicket = document.getElementById('cheapest-ticket');\r\n    const h2 = document.querySelector('.wrapper__ticket>h2');\r\n    if (this.state.cheapTicket && cheapestTicket) {\r\n      h2.textContent = `Самый дешевый билет на выбранную дату`;\r\n      cheapestTicket.style.display = 'block';\r\n    }\r\n    if (this.state.cheapTicket === undefined) {\r\n      cheapestTicket.style.display = 'block';\r\n      h2.textContent = `Извините, по этому направлению нет билетов`;\r\n    }\r\n  };\r\n\r\n  renderCardCheap = (item) => {\r\n    return <Card data={item} city={this.state.city} />;\r\n  };\r\n\r\n  onSearchFlights = (event) => {\r\n    event.preventDefault();\r\n    const formData = {\r\n      from: this.state.city.find((item) => this.state.origin === item.name),\r\n      to: this.state.city.find((item) => this.state.destination === item.name),\r\n      when: this.state.setDepartureDate,\r\n    };\r\n\r\n    if (formData.from && formData.to) {\r\n      const requestData = `?depart_date=${formData.when}&origin=${formData.from.code}&destination=${formData.to.code}&one_way=true&token=${this.API_KEY}`;\r\n      this.SearchService.getPrice(requestData).then((response) => {\r\n        this.renderCheap(response, formData.when);\r\n      });\r\n    } else {\r\n      alert('Введите корректное название города');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const dropdownCitiesFrom = document.querySelector('.dropdown__cities-from');\r\n    const dropdownCitiesTo = document.querySelector('.dropdown__cities-to');\r\n    const { cheapTicket, origin, destination } = this.state;\r\n    const item = this.renderCardCheap(cheapTicket);\r\n    return (\r\n      <>\r\n        <section className=\"wrapper\">\r\n          <form onSubmit={this.onSearchFlights} className=\"form-search\">\r\n            <div className=\"wrapper__search\">\r\n              <div className=\"input\" style={{ display: 'block' }}>\r\n                <label>\r\n                  Откуда\r\n                  <input\r\n                    type=\"text\"\r\n                    value={origin}\r\n                    onInput={this.showCity.bind(\r\n                      this,\r\n                      origin,\r\n                      dropdownCitiesFrom,\r\n                    )}\r\n                    onChange={this.onOriginChange}\r\n                    className=\"input__cities-from\"\r\n                    required\r\n                  />\r\n                </label>\r\n                <ul\r\n                  onClick={this.selectCityFrom}\r\n                  className=\"dropdown dropdown__cities-from\"></ul>\r\n              </div>\r\n\r\n              <div className=\"input\">\r\n                <label>\r\n                  Куда\r\n                  <input\r\n                    type=\"text\"\r\n                    value={destination}\r\n                    onInput={this.showCity.bind(\r\n                      this,\r\n                      destination,\r\n                      dropdownCitiesTo,\r\n                    )}\r\n                    onChange={this.onDestinationChange}\r\n                    className=\"input__cities-to\"\r\n                    required\r\n                  />\r\n                </label>\r\n                <ul\r\n                  onClick={this.selectCityTo}\r\n                  className=\"dropdown dropdown__cities-to\"></ul>\r\n              </div>\r\n\r\n              <div className=\"input input__cities-from\">\r\n                <label>\r\n                  Отправление\r\n                  <input\r\n                    type=\"date\"\r\n                    placeholder=\"Departure date\"\r\n                    onChange={this.departureDateChange}\r\n                    className=\"input__date-depart\"\r\n                    required\r\n                  />\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"wrapper__button\">\r\n              <button type=\"submit\" className=\"button button__search\">\r\n                <span className=\"button__search-text\">Найти билеты</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n        <section className=\"card-wrapper\">\r\n          <section\r\n            className=\"wrapper__ticket\"\r\n            id=\"cheapest-ticket\"\r\n            style={{ display: 'none' }}>\r\n            <h2></h2>\r\n            <article className=\"ticket\">\r\n              {this.state.cheapTicket ? item : null}\r\n            </article>\r\n          </section>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","/** @format */\n\nimport React from 'react';\nimport Search from './components/Search';\n\nexport default function App() {\n  return (\n    <div>\n      <h1 className=\"text-center  p-3\">Авиабилеты</h1>\n      <Search />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}