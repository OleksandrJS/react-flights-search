{"version":3,"sources":["services/SearchService.js","components/Loader.js","components/Card.js","redux/actions.js","redux/types.js","components/Search.js","App.js","serviceWorker.js","redux/loaderReducer.js","redux/postReducer.js","redux/rootReducer.js","index.js"],"names":["SearchService","getData","url","a","fetch","request","ok","Error","status","json","getCity","PROXY","CITY_API","res","filter","item","name","this","CITY_API2","Loader","className","role","Card","props","state","getNameCityFrom","getNameCityTo","getDate","currencyEx","getChanges","getLinkAviasales","prevProps","data","number_of_changes","setState","transfer","date","Date","depart_date","toLocaleString","year","month","day","link","origin","getMonth","destination","objCity","city","find","code","cityNameFrom","cityNameTo","exch","value","toFixed","loading","gate","href","Component","connect","card","hideLoader","type","Search","onCityLoaded","showCityFrom","list","textContent","setTimeout","toLowerCase","startsWith","forEach","li","document","createElement","classList","add","append","showCityTo","selectCityFrom","event","dropdownCitiesFrom","querySelector","target","tagName","selectCityTo","dropdownCitiesTo","onOriginChange","onDestinationChange","departureDateChange","setDepartureDate","cheapestTicket","cheapTicket","getElementById","h2","style","display","undefined","otherTickets","sort","b","splice","length","otherTicket","renderCard","cheapTicketYear","best_prices","renderCardCheap","renderOtherCheap","arr","map","i","key","onSearchFlights","preventDefault","formData","from","to","when","requestData","API_KEY","Promise","resolve","fetchData","then","fetchedPosts","alert","MAX_COUNT","updateCity","hideCity","addEventListener","closest","items","onSubmit","onInput","onChange","required","onClick","placeholder","id","mapDispatchToProps","dispatch","response","payload","post","App","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6TAEqBA,EACnB,aAAe,IAAD,gCAMdC,QANc,uCAMJ,WAAOC,GAAP,eAAAC,EAAA,sEACcC,MAAMF,GADpB,WACFG,EADE,QAGKC,GAHL,sBAIA,IAAIC,MAAJ,0BAA6BL,EAA7B,sBAA8CG,EAAQG,SAJtD,uBAOKH,EAAQI,OAPb,mFANI,2DAgBdC,QAhBc,sBAgBJ,4BAAAP,EAAA,sEACU,EAAKF,QAAQ,EAAKU,MAAQ,EAAKC,UADzC,cACFC,EADE,yBAEDA,EAAIC,QAAO,SAACC,GAAD,OAAUA,EAAKC,SAFzB,2CAfRC,KAAKL,SAAW,mDAChBK,KAAKN,MAAQ,uCACbM,KAAKC,UAAY,iBCFRC,EAAS,WACpB,OACE,yBAAKC,UAAU,iBAAiBC,KAAK,UACnC,yBACED,UAAU,+CACVC,KAAK,UACL,0BAAMD,UAAU,WAAhB,iBCJFE,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,gEAMjBP,KAAKQ,kBACLR,KAAKS,gBACLT,KAAKU,UACLV,KAAKW,aACLX,KAAKY,aACLZ,KAAKa,qB,yCAGYC,GACbd,KAAKM,MAAMS,OAASD,EAAUC,OAChCf,KAAKQ,kBACLR,KAAKS,gBACLT,KAAKU,UACLV,KAAKW,aACLX,KAAKY,aACLZ,KAAKa,sB,mCAMP,OADYb,KAAKM,MAAMS,KAAKC,mBAE1B,KAAK,EACHhB,KAAKiB,SAAS,CAAEC,SAAU,uGAC1B,MACF,KAAK,EACHlB,KAAKiB,SAAS,CAAEC,SAAU,6GAC1B,MACF,KAAK,EACHlB,KAAKiB,SAAS,CAAEC,SAAU,6GAC1B,MACF,QACElB,KAAKiB,SAAS,CAAEC,SAAU,iF,gCAK9B,IAAMC,EAAO,IAAIC,KAAKpB,KAAKM,MAAMS,KAAKM,aAAaC,eAAe,KAAM,CACtEC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEPzB,KAAKiB,SAAS,CAAEE,W,yCAIhB,IAAIO,EAAO,mCACXA,GAAQ1B,KAAKM,MAAMS,KAAKY,OACxB,IAAMR,EAAO,IAAIC,KAAKpB,KAAKM,MAAMS,KAAKM,aAChCI,EAAMN,EAAKT,UACjBgB,GAAQD,EAAM,GAAK,IAAMA,EAAMA,EAC/B,IAAMD,EAAQL,EAAKS,WACnBF,GAAQF,EAAQ,GAAK,IAAMA,EAAQA,EACnCE,GAAQ1B,KAAKM,MAAMS,KAAKc,YACxBH,GAAQ,IACR1B,KAAKiB,SAAS,CAAES,W,wCAGC,IAAD,OACVI,EAAU9B,KAAKM,MAAMyB,KAAKC,MAC9B,SAAClC,GAAD,OAAUA,EAAKmC,OAAS,EAAK3B,MAAMS,KAAKY,UAE1C3B,KAAKiB,SAAS,CAAEiB,aAAcJ,EAAQ/B,S,sCAEvB,IAAD,OACR+B,EAAU9B,KAAKM,MAAMyB,KAAKC,MAC9B,SAAClC,GAAD,OAAUA,EAAKmC,OAAS,EAAK3B,MAAMS,KAAKc,eAE1C7B,KAAKiB,SAAS,CAAEkB,WAAYL,EAAQ/B,S,mCAGpC,IAAMqC,GAAQpC,KAAKM,MAAMS,KAAKsB,MAAQ,KAAKC,QAAQ,GACnDtC,KAAKiB,SAAS,CAAEmB,W,+BAER,IAAD,EAC0DpC,KAAKO,MAA9DmB,EADD,EACCA,KAAMU,EADP,EACOA,KAAMF,EADb,EACaA,aAAcC,EAD3B,EAC2BA,WAAYhB,EADvC,EACuCA,KAAMD,EAD7C,EAC6CA,SAEpD,OADgBlB,KAAKM,MAAMiC,QAGvB,yBAAKpC,UAAU,gCACb,kBAAC,EAAD,OAKJ,yBAAKA,UAAU,eACb,wBAAIA,UAAU,SAASH,KAAKM,MAAMS,KAAKyB,MACvC,yBAAKrC,UAAU,mBACb,yBAAKA,UAAU,aACb,uBAAGsC,KAAMf,EAAMvB,UAAU,sBAAzB,wDACaiC,EADb,WAIF,yBAAKjC,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cAAf,oFAEE,0BAAMA,UAAU,cAAc+B,IAEhC,yBAAK/B,UAAU,QAAQgB,IAGzB,yBAAKhB,UAAU,eACb,yBAAKA,UAAU,WAAWe,GAC1B,yBAAKf,UAAU,YAAf,+FAEE,0BAAMA,UAAU,cAAcgC,Y,GAjH3BO,aA+HJC,eAJS,SAACpC,GACvB,MAAO,CAAEgC,QAAShC,EAAMqC,KAAKL,WAGS,KAAzBI,CAA+BtC,GCxHvC,SAASwC,IACd,MAAO,CACLC,KCZuB,oB,ICOrBC,E,kDACJ,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAuBR0C,aAAe,SAACjB,GACd,EAAKd,SAAS,CACZc,UA1Be,EA4CnBkB,aAAe,SAACC,GACdA,EAAKC,YAAc,GACnBC,YAAW,WAAO,IACRzB,EAAW,EAAKpB,MAAhBoB,OACO,KAAXA,GACiB,EAAKpB,MAAMwB,KAAKlC,QAAO,SAACC,GAEzC,OADgBA,EAAKC,KAAKsD,cACXC,WAAW3B,EAAO0B,kBAGxBE,SAAQ,SAACzD,GAClB,IAAM0D,EAAKC,SAASC,cAAc,MAClCF,EAAGG,UAAUC,IAAI,kBACjBJ,EAAGL,YAAcrD,EAAKC,KACtBmD,EAAKW,OAAOL,MAGD,KAAX7B,IACFuB,EAAKC,YAAc,MAEpB,KAhEc,EAmEnBW,WAAa,SAACZ,GACZA,EAAKC,YAAc,GACnBC,YAAW,WAAO,IACRvB,EAAgB,EAAKtB,MAArBsB,YACY,KAAhBA,GACiB,EAAKtB,MAAMwB,KAAKlC,QAAO,SAACC,GAEzC,OADgBA,EAAKC,KAAKsD,cACXC,WAAWzB,EAAYwB,kBAG7BE,SAAQ,SAACzD,GAClB,IAAM0D,EAAKC,SAASC,cAAc,MAClCF,EAAGG,UAAUC,IAAI,kBACjBJ,EAAGL,YAAcrD,EAAKC,KACtBmD,EAAKW,OAAOL,MAGI,KAAhB3B,IACFqB,EAAKC,YAAc,MAEpB,IAvFc,EA0FnBY,eAAiB,SAACC,GAChB,IAAMC,EAAqBR,SAASS,cAAc,0BAC5CC,EAASH,EAAMG,OACgB,OAAjCA,EAAOC,QAAQf,gBACjB,EAAKpC,SAAS,CAAEU,OAAQwC,EAAOhB,cAC/Bc,EAAmBd,YAAc,KA/FlB,EAmGnBkB,aAAe,SAACL,GACd,IAAMM,EAAmBb,SAASS,cAAc,wBAC1CC,EAASH,EAAMG,OACgB,OAAjCA,EAAOC,QAAQf,gBACjB,EAAKpC,SAAS,CAAEY,YAAasC,EAAOhB,cACpCmB,EAAiBnB,YAAc,KAxGhB,EA4GnBoB,eAAiB,SAACP,GAChB,EAAK/C,SAAS,CACZU,OAAQqC,EAAMG,OAAO9B,SA9GN,EAkHnBmC,oBAAsB,SAACR,GACrB,EAAK/C,SAAS,CACZY,YAAamC,EAAMG,OAAO9B,SApHX,EAwHnBoC,oBAAsB,SAACT,GACrB,EAAK/C,SAAS,CACZyD,iBAAkBV,EAAMG,OAAO9B,SA1HhB,EA8HnBsC,eAAiB,SAAC/B,GAChB,EAAK3B,SAAS,CAAE2D,YAAahC,IAC7B,IAAM+B,EAAiBlB,SAASoB,eAAe,mBACzCC,EAAKrB,SAASS,cAAc,uBAC9B,EAAK3D,MAAMqE,aAAeD,IAC5BG,EAAG3B,YAAH,wMACAwB,EAAeI,MAAMC,QAAU,cAEFC,IAA3B,EAAK1E,MAAMqE,cACbD,EAAeI,MAAMC,QAAU,QAC/BF,EAAG3B,YAAH,iNAxIe,EA4InB+B,aAAe,SAACtC,GACdA,EAAKuC,MAAK,SAACjG,EAAGkG,GAAJ,OAAUlG,EAAEmD,MAAQ+C,EAAE/C,SAChCO,EAAKyC,OAAO,EAAGzC,EAAK0C,OAAS,IAC7B,IAAMJ,EAAezB,SAASoB,eAAe,uBACvCC,EAAKrB,SAASS,cAAc,qBAC9BtB,EAAK0C,OAAS,GAChB,EAAKrE,SAAS,CAAEsE,YAAa3C,IACzB,EAAKrC,MAAMgF,aAAeL,IAC5BJ,EAAG3B,YAAH,4LACA+B,EAAaH,MAAMC,QAAU,WAG/BE,EAAaH,MAAMC,QAAU,QAC7BF,EAAG3B,YAAH,mOAzJe,EA6JnBqC,WAAa,SAACzE,EAAMI,GAClB,IAAMsE,EAAkB1E,EAAK2E,YAIvB9C,EAHiB6C,EAAgB5F,QACrC,SAACC,GAAD,OAAUA,EAAKuB,cAAgBF,KAEL,GAC5B,EAAKwD,eAAe/B,GACpB,EAAKsC,aAAaO,IApKD,EAuKnBE,gBAAkB,SAAC7F,GACjB,OAAO,kBAAC,EAAD,CAAMiB,KAAMjB,EAAMiC,KAAM,EAAKxB,MAAMwB,QAxKzB,EA2KnB6D,iBAAmB,SAACC,GAClB,GAAIA,EACF,OAAOA,EAAIC,KAAI,SAAChG,EAAMiG,GACpB,OAAO,kBAAC,EAAD,CAAMhF,KAAMjB,EAAMiC,KAAM,EAAKxB,MAAMwB,KAAMiE,IAAKD,QA9KxC,EAmLnBE,gBAAkB,SAACjC,GACjBA,EAAMkC,iBACN,EAAKjF,SAAS,CAAEsE,YAAa,KAC7B,IAAMY,EAAW,CACfC,KAAM,EAAK7F,MAAMwB,KAAKC,MAAK,SAAClC,GAAD,OAAU,EAAKS,MAAMoB,SAAW7B,EAAKC,QAChEsG,GAAI,EAAK9F,MAAMwB,KAAKC,MAAK,SAAClC,GAAD,OAAU,EAAKS,MAAMsB,cAAgB/B,EAAKC,QACnEuG,KAAM,EAAK/F,MAAMmE,kBAGnB,GAAIyB,EAASC,MAAQD,EAASE,GAAI,CAChC,IAAME,EAAW,uBAAmBJ,EAASG,KAA5B,mBAA2CH,EAASC,KAAKnE,KAAzD,wBAA6EkE,EAASE,GAAGpE,KAAzF,+BAAoH,EAAKuE,SAC1I,IAAIC,SAAQ,SAACC,GAAD,OAAaA,EAAQ,EAAKpG,MAAMqG,UAAUJ,OACnDK,MAAK,kBAAM,EAAKpB,WAAW,EAAKlF,MAAMuG,aAAcV,EAASG,SAC7DM,MAAK,kBAAMxD,YAAW,kBAAM,EAAK9C,MAAMuC,eAAc,aAExDiE,MAAM,kMA/LR,EAAK/H,cAAgB,IAAIA,EACzB,EAAKgI,UAAY,GACjB,EAAKP,QAAU,mCAEf,EAAKjG,MAAQ,CACXoB,OAAQ,GACRE,YAAa,GACb6C,iBAAkB,GAClB3C,KAAM,IAXS,E,gEAgBjB/B,KAAKgH,aACLhH,KAAKiH,a,mCAILjH,KAAKjB,cAAcU,UAAUmH,KAAK5G,KAAKgD,gB,iCAU1BS,SAASS,cAAc,QAC/BgD,iBAAiB,SAAS,SAAClD,GAC9B,IAAMC,EAAqBR,SAASS,cAClC,0BAEII,EAAmBb,SAASS,cAAc,wBAC3CF,EAAMG,OAAOgD,QAAQ,kBACxBlD,EAAmBd,YAAc,GACjCmB,EAAiBnB,YAAc,S,+BA+J3B,IAAD,OACDc,EAAqBR,SAASS,cAAc,0BAC5CI,EAAmBb,SAASS,cAAc,wBAFzC,EAGmDlE,KAAKO,MAAvDqE,EAHD,EAGCA,YAAaW,EAHd,EAGcA,YAAa5D,EAH3B,EAG2BA,OAAQE,EAHnC,EAGmCA,YACpC/B,EAAOE,KAAK2F,gBAAgBf,GAC5BwC,EAAQpH,KAAK4F,iBAAiBL,GAClB9B,SAASS,cAAc,eACzC,OACE,oCACE,6BAAS/D,UAAU,WACjB,0BAAMkH,SAAUrH,KAAKiG,gBAAiB9F,UAAU,eAC9C,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,QAAQ4E,MAAO,CAAEC,QAAS,UACvC,sEAEE,2BACElC,KAAK,OACLT,MAAOV,EACP2F,QAAStH,KAAKuE,eACdgD,SAAU,kBAAM,EAAKtE,aAAagB,IAClC9D,UAAU,qBACVqH,UAAQ,KAGZ,wBACEC,QAASzH,KAAK+D,eACd5D,UAAU,oCAGd,yBAAKA,UAAU,SACb,0DAEE,2BACE2C,KAAK,OACLT,MAAOR,EACPyF,QAAStH,KAAKwE,oBACd+C,SAAU,kBAAM,EAAKzD,WAAWQ,IAChCnE,UAAU,mBACVqH,UAAQ,KAGZ,wBACEC,QAASzH,KAAKqE,aACdlE,UAAU,kCAGd,yBAAKA,UAAU,4BACb,oGAEE,2BACE2C,KAAK,OACL4E,YAAY,iBACZH,SAAUvH,KAAKyE,oBACftE,UAAU,qBACVqH,UAAQ,OAMhB,yBAAKrH,UAAU,mBACb,4BAAQ2C,KAAK,SAAS3C,UAAU,yBAC9B,0BAAMA,UAAU,uBAAhB,2EAKR,6BAASA,UAAU,gBACjB,6BACEA,UAAU,kBACVwH,GAAG,kBACH5C,MAAO,CAAEC,QAAS,SAClB,6BACA,6BAAS7E,UAAU,UAAUyE,EAAc9E,EAAO,OAEpD,6BACEK,UAAU,gBACVwH,GAAG,sBACH5C,MAAO,CAAEC,QAAS,SAClB,6BACA,6BAAS7E,UAAU,UAAUoF,EAAc6B,EAAQ,a,GAvR1C1E,aA+RfkF,EAAqB,CACzBjB,UFvRK,SAAmB5F,GACxB,8CAAO,WAAO8G,GAAP,iBAAA3I,EAAA,sEAEH2I,EAdG,CACL/E,KCPuB,qBDkBlB,SAGoB3D,MAlBf,mDAkB6B4B,GAHlC,cAGG+G,EAHH,gBAIgBA,EAAStI,OAJzB,OAIGA,EAJH,OAKHqI,EAAS,CAAE/E,KCrBS,mBDqBSiF,QAASvI,IALnC,kDAOHqI,EAbG,CACL/E,KCZuB,qBDiBlB,0DAAP,uDEuRAD,WAAYA,GASCF,eANS,SAACpC,GACvB,MAAO,CACLsG,aAActG,EAAMyH,KAAKnB,gBAIWe,EAAzBjF,CAA6CI,GC/S7C,SAASkF,IACtB,OACE,6BACE,wBAAI9H,UAAU,oBAAd,gEACA,kBAAC,EAAD,OCGc+H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,WCdAC,EAAe,CACnBhG,SAAS,GCDLgG,EAAe,CACnB1B,aAAc,ICCH2B,EAAcC,YAAgB,CACzC7F,KFC2B,WAAmC,IAAlCrC,EAAiC,uDAAzBgI,EAAcG,EAAW,uCAC7D,OAAQA,EAAO5F,MACb,IJRuB,mBISrB,OAAO,2BAAKvC,GAAZ,IAAmBgC,SAAS,IAC9B,IJTuB,mBIUrB,OAAO,2BAAKhC,GAAZ,IAAmBgC,SAAS,IAC9B,QACE,OAAOhC,IEPXyH,KDA0B,WAAmC,IAAlCzH,EAAiC,uDAAzBgI,EAAcG,EAAW,uCAC5D,OAAQA,EAAO5F,MACb,ILNsB,mBKOpB,OAAO,2BAAKvC,GAAZ,IAAmBsG,aAAc6B,EAAOX,UAC1C,QACE,OAAOxH,MEFPoI,EAAQC,YACZJ,EACAK,YACEC,YAAgBC,KAChBZ,OAAOa,8BACLb,OAAOa,iCAIbC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAMQ,WAAP,KACE,kBAAClB,EAAD,QAGJxE,SAASoB,eAAe,SJyGpB,kBAAmBuE,WACrBA,UAAUC,cAAcC,MACrB1C,MAAK,SAAA2C,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.301ae2c4.chunk.js","sourcesContent":["/** @format */\r\n\r\nexport default class SearchService {\r\n  constructor() {\r\n    this.CITY_API = 'http://api.travelpayouts.com/data/ru/cities.json';\r\n    this.PROXY = 'https://cors-anywhere.herokuapp.com/';\r\n    this.CITY_API2 = './cities.json';\r\n    // this.PRICE = 'https://min-prices.aviasales.ru/calendar_preload';\r\n  }\r\n  getData = async (url) => {\r\n    const request = await fetch(url);\r\n\r\n    if (!request.ok) {\r\n      throw new Error(`Could not fetch ${url}; received ${request.status}`);\r\n    }\r\n\r\n    return await request.json();\r\n  };\r\n\r\n  getCity = async () => {\r\n    const res = await this.getData(this.PROXY + this.CITY_API);\r\n    return res.filter((item) => item.name);\r\n  };\r\n\r\n  // getPrice = async (date) => {\r\n  //   const res = await this.getData(this.PROXY + this.PRICE + date);\r\n  //   return res;\r\n  // };\r\n}\r\n","/** @format */\r\n\r\nimport React from 'react';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"loader-wrapper\" role=\"status\">\r\n      <div\r\n        className=\"spinner-border text-center text-primary pt-3\"\r\n        role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Loader } from './Loader';\r\n\r\nclass Card extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getNameCityFrom();\r\n    this.getNameCityTo();\r\n    this.getDate();\r\n    this.currencyEx();\r\n    this.getChanges();\r\n    this.getLinkAviasales();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.data !== prevProps.data) {\r\n      this.getNameCityFrom();\r\n      this.getNameCityTo();\r\n      this.getDate();\r\n      this.currencyEx();\r\n      this.getChanges();\r\n      this.getLinkAviasales();\r\n    }\r\n  }\r\n\r\n  getChanges() {\r\n    const num = this.props.data.number_of_changes;\r\n    switch (num) {\r\n      case 1:\r\n        this.setState({ transfer: 'С одной пересадкой' });\r\n        break;\r\n      case 2:\r\n        this.setState({ transfer: 'С двумя пересадками' });\r\n        break;\r\n      case 3:\r\n        this.setState({ transfer: 'С тремя пересадками' });\r\n        break;\r\n      default:\r\n        this.setState({ transfer: 'Без пересадок' });\r\n    }\r\n  }\r\n\r\n  getDate() {\r\n    const date = new Date(this.props.data.depart_date).toLocaleString('ru', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n    this.setState({ date });\r\n  }\r\n\r\n  getLinkAviasales() {\r\n    let link = 'https://www.aviasales.ua/search/';\r\n    link += this.props.data.origin;\r\n    const date = new Date(this.props.data.depart_date);\r\n    const day = date.getDate();\r\n    link += day < 10 ? '0' + day : day;\r\n    const month = date.getMonth();\r\n    link += month < 10 ? '0' + month : month;\r\n    link += this.props.data.destination;\r\n    link += '1';\r\n    this.setState({ link });\r\n  }\r\n\r\n  getNameCityFrom() {\r\n    const objCity = this.props.city.find(\r\n      (item) => item.code === this.props.data.origin,\r\n    );\r\n    this.setState({ cityNameFrom: objCity.name });\r\n  }\r\n  getNameCityTo() {\r\n    const objCity = this.props.city.find(\r\n      (item) => item.code === this.props.data.destination,\r\n    );\r\n    this.setState({ cityNameTo: objCity.name });\r\n  }\r\n  currencyEx() {\r\n    const exch = (this.props.data.value / 2.6).toFixed(0);\r\n    this.setState({ exch });\r\n  }\r\n  render() {\r\n    const { link, exch, cityNameFrom, cityNameTo, date, transfer } = this.state;\r\n    const loading = this.props.loading;\r\n    if (loading) {\r\n      return (\r\n        <div className=\"card_ticket text-center size\">\r\n          <Loader />\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"card_ticket\">\r\n        <h3 className=\"agent\">{this.props.data.gate}</h3>\r\n        <div className=\"ticket__wrapper\">\r\n          <div className=\"left-side\">\r\n            <a href={link} className=\"button button__buy\">\r\n              Купить за {exch}₴\r\n            </a>\r\n          </div>\r\n          <div className=\"right-side\">\r\n            <div className=\"block-left\">\r\n              <div className=\"city__from\">\r\n                Вылет из города:\r\n                <span className=\"city__name\">{cityNameFrom}</span>\r\n              </div>\r\n              <div className=\"date\">{date}</div>\r\n            </div>\r\n\r\n            <div className=\"block-right\">\r\n              <div className=\"changes\">{transfer}</div>\r\n              <div className=\"city__to\">\r\n                Город назначения:\r\n                <span className=\"city__name\">{cityNameTo}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { loading: state.card.loading };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Card);\r\n","/** @format */\r\n\r\nimport { SHOW_LOADER, HIDE_LOADER, FETCH_POST } from './types';\r\n\r\n// const PROXY = 'https://cors-anywhere.herokuapp.com/';\r\nconst PRICE = 'https://min-prices.aviasales.ru/calendar_preload';\r\n\r\nexport function showLoader() {\r\n  return {\r\n    type: SHOW_LOADER,\r\n  };\r\n}\r\n\r\nexport function hideLoader() {\r\n  return {\r\n    type: HIDE_LOADER,\r\n  };\r\n}\r\n\r\nexport function fetchData(data) {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(showLoader());\r\n      const response = await fetch(PRICE + data);\r\n      const json = await response.json();\r\n      dispatch({ type: FETCH_POST, payload: json });\r\n    } catch (e) {\r\n      dispatch(hideLoader());\r\n    }\r\n  };\r\n}\r\n","/** @format */\r\n\r\nexport const SHOW_LOADER = 'CARD/SHOW_LOADER';\r\nexport const HIDE_LOADER = 'CARD/HIDE_LOADER';\r\nexport const FETCH_POST = 'POST/FETCH_POSTS';\r\n","/** @format */\r\n\r\nimport React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './search.css';\r\nimport SearchService from '../services/SearchService';\r\nimport Card from './Card';\r\nimport { fetchData, hideLoader } from '../redux/actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.SearchService = new SearchService();\r\n    this.MAX_COUNT = 10;\r\n    this.API_KEY = '6af464c149023c58b81e81ab93488992';\r\n\r\n    this.state = {\r\n      origin: '',\r\n      destination: '',\r\n      setDepartureDate: '',\r\n      city: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateCity();\r\n    this.hideCity();\r\n  }\r\n\r\n  updateCity() {\r\n    this.SearchService.getCity().then(this.onCityLoaded);\r\n  }\r\n\r\n  onCityLoaded = (city) => {\r\n    this.setState({\r\n      city,\r\n    });\r\n  };\r\n\r\n  hideCity() {\r\n    const body = document.querySelector('body');\r\n    body.addEventListener('click', (event) => {\r\n      const dropdownCitiesFrom = document.querySelector(\r\n        '.dropdown__cities-from',\r\n      );\r\n      const dropdownCitiesTo = document.querySelector('.dropdown__cities-to');\r\n      if (!event.target.closest('.form-search')) {\r\n        dropdownCitiesFrom.textContent = '';\r\n        dropdownCitiesTo.textContent = '';\r\n      }\r\n    });\r\n  }\r\n\r\n  showCityFrom = (list) => {\r\n    list.textContent = '';\r\n    setTimeout(() => {\r\n      const { origin } = this.state;\r\n      if (origin !== '') {\r\n        const filterCity = this.state.city.filter((item) => {\r\n          const fixItem = item.name.toLowerCase();\r\n          return fixItem.startsWith(origin.toLowerCase());\r\n        });\r\n\r\n        filterCity.forEach((item) => {\r\n          const li = document.createElement('li');\r\n          li.classList.add('dropdown__city');\r\n          li.textContent = item.name;\r\n          list.append(li);\r\n        });\r\n      }\r\n      if (origin === '') {\r\n        list.textContent = '';\r\n      }\r\n    }, 10);\r\n  };\r\n\r\n  showCityTo = (list) => {\r\n    list.textContent = '';\r\n    setTimeout(() => {\r\n      const { destination } = this.state;\r\n      if (destination !== '') {\r\n        const filterCity = this.state.city.filter((item) => {\r\n          const fixItem = item.name.toLowerCase();\r\n          return fixItem.startsWith(destination.toLowerCase());\r\n        });\r\n\r\n        filterCity.forEach((item) => {\r\n          const li = document.createElement('li');\r\n          li.classList.add('dropdown__city');\r\n          li.textContent = item.name;\r\n          list.append(li);\r\n        });\r\n      }\r\n      if (destination === '') {\r\n        list.textContent = '';\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  selectCityFrom = (event) => {\r\n    const dropdownCitiesFrom = document.querySelector('.dropdown__cities-from');\r\n    const target = event.target;\r\n    if (target.tagName.toLowerCase() === 'li') {\r\n      this.setState({ origin: target.textContent });\r\n      dropdownCitiesFrom.textContent = '';\r\n    }\r\n  };\r\n\r\n  selectCityTo = (event) => {\r\n    const dropdownCitiesTo = document.querySelector('.dropdown__cities-to');\r\n    const target = event.target;\r\n    if (target.tagName.toLowerCase() === 'li') {\r\n      this.setState({ destination: target.textContent });\r\n      dropdownCitiesTo.textContent = '';\r\n    }\r\n  };\r\n\r\n  onOriginChange = (event) => {\r\n    this.setState({\r\n      origin: event.target.value,\r\n    });\r\n  };\r\n\r\n  onDestinationChange = (event) => {\r\n    this.setState({\r\n      destination: event.target.value,\r\n    });\r\n  };\r\n\r\n  departureDateChange = (event) => {\r\n    this.setState({\r\n      setDepartureDate: event.target.value,\r\n    });\r\n  };\r\n\r\n  cheapestTicket = (card) => {\r\n    this.setState({ cheapTicket: card });\r\n    const cheapestTicket = document.getElementById('cheapest-ticket');\r\n    const h2 = document.querySelector('.wrapper__ticket>h2');\r\n    if (this.state.cheapTicket && cheapestTicket) {\r\n      h2.textContent = `Самый дешевый билет на выбранную дату`;\r\n      cheapestTicket.style.display = 'block';\r\n    }\r\n    if (this.state.cheapTicket === undefined) {\r\n      cheapestTicket.style.display = 'block';\r\n      h2.textContent = `Извините, нет билетов на выбранную дату`;\r\n    }\r\n  };\r\n\r\n  otherTickets = (card) => {\r\n    card.sort((a, b) => a.value - b.value);\r\n    card.splice(9, card.length - 10);\r\n    const otherTickets = document.getElementById('other-cheap-tickets');\r\n    const h2 = document.querySelector('.block__ticket>h2');\r\n    if (card.length > 0) {\r\n      this.setState({ otherTicket: card });\r\n      if (this.state.otherTicket && otherTickets) {\r\n        h2.textContent = `Самые дешевые билеты на другие даты`;\r\n        otherTickets.style.display = 'block';\r\n      }\r\n    } else {\r\n      otherTickets.style.display = 'block';\r\n      h2.textContent = `Извините, по этому направлению нет билетов`;\r\n    }\r\n  };\r\n\r\n  renderCard = (data, date) => {\r\n    const cheapTicketYear = data.best_prices;\r\n    const cheapTicketDay = cheapTicketYear.filter(\r\n      (item) => item.depart_date === date,\r\n    );\r\n    const card = cheapTicketDay[0];\r\n    this.cheapestTicket(card);\r\n    this.otherTickets(cheapTicketYear);\r\n  };\r\n\r\n  renderCardCheap = (item) => {\r\n    return <Card data={item} city={this.state.city} />;\r\n  };\r\n\r\n  renderOtherCheap = (arr) => {\r\n    if (arr) {\r\n      return arr.map((item, i) => {\r\n        return <Card data={item} city={this.state.city} key={i} />;\r\n      });\r\n    }\r\n  };\r\n\r\n  onSearchFlights = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ otherTicket: '' });\r\n    const formData = {\r\n      from: this.state.city.find((item) => this.state.origin === item.name),\r\n      to: this.state.city.find((item) => this.state.destination === item.name),\r\n      when: this.state.setDepartureDate,\r\n    };\r\n\r\n    if (formData.from && formData.to) {\r\n      const requestData = `?depart_date=${formData.when}&origin=${formData.from.code}&destination=${formData.to.code}&one_way=true&token=${this.API_KEY}`;\r\n      new Promise((resolve) => resolve(this.props.fetchData(requestData)))\r\n        .then(() => this.renderCard(this.props.fetchedPosts, formData.when))\r\n        .then(() => setTimeout(() => this.props.hideLoader(), 300));\r\n    } else {\r\n      alert('Введите корректное название города');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const dropdownCitiesFrom = document.querySelector('.dropdown__cities-from');\r\n    const dropdownCitiesTo = document.querySelector('.dropdown__cities-to');\r\n    const { cheapTicket, otherTicket, origin, destination } = this.state;\r\n    const item = this.renderCardCheap(cheapTicket);\r\n    const items = this.renderOtherCheap(otherTicket);\r\n    const inputFrom = document.querySelector('.input-from');\r\n    return (\r\n      <>\r\n        <section className=\"wrapper\">\r\n          <form onSubmit={this.onSearchFlights} className=\"form-search\">\r\n            <div className=\"wrapper__search\">\r\n              <div className=\"input\" style={{ display: 'block' }}>\r\n                <label>\r\n                  Откуда\r\n                  <input\r\n                    type=\"text\"\r\n                    value={origin}\r\n                    onInput={this.onOriginChange}\r\n                    onChange={() => this.showCityFrom(dropdownCitiesFrom)}\r\n                    className=\"input__cities-from\"\r\n                    required\r\n                  />\r\n                </label>\r\n                <ul\r\n                  onClick={this.selectCityFrom}\r\n                  className=\"dropdown dropdown__cities-from\"></ul>\r\n              </div>\r\n\r\n              <div className=\"input\">\r\n                <label>\r\n                  Куда\r\n                  <input\r\n                    type=\"text\"\r\n                    value={destination}\r\n                    onInput={this.onDestinationChange}\r\n                    onChange={() => this.showCityTo(dropdownCitiesTo)}\r\n                    className=\"input__cities-to\"\r\n                    required\r\n                  />\r\n                </label>\r\n                <ul\r\n                  onClick={this.selectCityTo}\r\n                  className=\"dropdown dropdown__cities-to\"></ul>\r\n              </div>\r\n\r\n              <div className=\"input input__cities-from\">\r\n                <label>\r\n                  Отправление\r\n                  <input\r\n                    type=\"date\"\r\n                    placeholder=\"Departure date\"\r\n                    onChange={this.departureDateChange}\r\n                    className=\"input__date-depart\"\r\n                    required\r\n                  />\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"wrapper__button\">\r\n              <button type=\"submit\" className=\"button button__search\">\r\n                <span className=\"button__search-text\">Найти билеты</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n        <section className=\"card-wrapper\">\r\n          <section\r\n            className=\"wrapper__ticket\"\r\n            id=\"cheapest-ticket\"\r\n            style={{ display: 'none' }}>\r\n            <h2></h2>\r\n            <article className=\"ticket\">{cheapTicket ? item : null}</article>\r\n          </section>\r\n          <section\r\n            className=\"block__ticket\"\r\n            id=\"other-cheap-tickets\"\r\n            style={{ display: 'none' }}>\r\n            <h2></h2>\r\n            <article className=\"ticket\">{otherTicket ? items : null}</article>\r\n          </section>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  fetchData: fetchData,\r\n  hideLoader: hideLoader,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedPosts: state.post.fetchedPosts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","/** @format */\n\nimport React from 'react';\nimport Search from './components/Search';\n\nexport default function App() {\n  return (\n    <div>\n      <h1 className=\"text-center  p-3\">Авиабилеты</h1>\n      <Search />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/** @format */\r\n\r\nimport { SHOW_LOADER, HIDE_LOADER } from './types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n};\r\n\r\nexport const loaderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_LOADER:\r\n      return { ...state, loading: true };\r\n    case HIDE_LOADER:\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport { FETCH_POST } from './types';\r\n\r\nconst initialState = {\r\n  fetchedPosts: [],\r\n};\r\n\r\nexport const postsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_POST:\r\n      return { ...state, fetchedPosts: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","/** @format */\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { loaderReducer } from './loaderReducer';\r\nimport { postsReducer } from './postReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  card: loaderReducer,\r\n  post: postsReducer,\r\n});\r\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { rootReducer } from './redux/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__(),\n  ),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}